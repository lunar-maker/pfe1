// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  PATIENT
  DOCTOR
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

enum MedicalSpecialty {
  CARDIOLOGY
  DERMATOLOGY
  PEDIATRICS
  NEUROLOGY
  GYNECOLOGY
  OPHTHALMOLOGY
  GENERAL_MEDICINE
  PSYCHIATRY
  ORTHOPEDICS
  RADIOLOGY
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

model User {
  id           Int      @id @default(autoincrement())
  clerkId      String   @unique
  role         Role     @default(PATIENT)
  first_name   String
  last_name    String
  phone_number String
  birth_date   DateTime
  gender       Gender

  // Doctor-specific fields (nullable for patients)
  specialty MedicalSpecialty?

  // Relations
  weeklySchedules        WeeklyScheduleTemplate[]
  patientAppointments    Appointment[]            @relation("PatientAppointments")
  doctorAppointments     Appointment[]            @relation("DoctorAppointments")
  doctorAvailabilities   DoctorAvailability[]
  prescriptionsAsDoctor  Prescription[]           @relation("DoctorPrescriptions")
  prescriptionsAsPatient Prescription[]           @relation("PatientPrescriptions")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Appointment {
  id           Int               @id @default(autoincrement())
  doctor       User              @relation("DoctorAppointments", fields: [doctorId], references: [id])
  patient      User              @relation("PatientAppointments", fields: [patientId], references: [id])
  timeSlot     WeeklyTimeSlot?   @relation(fields: [timeSlotId], references: [id])
  date         DateTime // Specific date for this appointment
  startTime    String // e.g., "09:00"
  endTime      String // e.g., "10:00"
  typemaladie  String
  status       AppointmentStatus @default(PENDING)
  notes        String?
  prescription Prescription? // One-to-one relation with prescription
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt

  doctorId   Int
  patientId  Int
  timeSlotId Int?

  @@unique([doctorId, date, startTime])
}

model DoctorAvailability {
  id               Int                @id @default(autoincrement())
  doctor           User               @relation(fields: [doctorId], references: [id])
  date             DateTime
  startTime        String
  endTime          String
  isAvailable      Boolean            @default(true)
  appointmentHours AppointmentHours[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt

  doctorId Int

  @@unique([doctorId, date, startTime])
}

model AppointmentHours {
  id                 Int                @id @default(autoincrement())
  doctorAvailability DoctorAvailability @relation(fields: [doctorAvailabilityId], references: [id])
  date               String
  hour               String
  isAvailable        Boolean            @default(true)
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt

  doctorAvailabilityId Int
}

model WeeklyScheduleTemplate {
  id            Int              @id @default(autoincrement())
  doctor        User             @relation(fields: [doctorId], references: [id])
  name          String // e.g., "Default Schedule", "Summer Hours"
  isActive      Boolean          @default(true)
  effectiveFrom DateTime         @default(now())
  effectiveTo   DateTime? // null means indefinite
  timeSlots     WeeklyTimeSlot[]
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt

  doctorId Int

  @@unique([doctorId, name])
}

model WeeklyTimeSlot {
  id           Int                    @id @default(autoincrement())
  template     WeeklyScheduleTemplate @relation(fields: [templateId], references: [id], onDelete: Cascade)
  dayOfWeek    DayOfWeek
  startTime    String // e.g., "09:00"
  endTime      String // e.g., "17:00"
  isActive     Boolean                @default(true)
  appointments Appointment[] // Appointments booked in this time slot
  createdAt    DateTime               @default(now())
  updatedAt    DateTime               @updatedAt

  templateId Int

  @@unique([templateId, dayOfWeek, startTime])
}

model Prescription {
  id           Int                      @id @default(autoincrement())
  appointment  Appointment              @relation(fields: [appointmentId], references: [id])
  doctor       User                     @relation("DoctorPrescriptions", fields: [doctorId], references: [id])
  patient      User                     @relation("PatientPrescriptions", fields: [patientId], references: [id])
  diagnosis    String // Medical diagnosis
  instructions String? // General instructions for the patient
  medications  PrescriptionMedication[] // List of prescribed medications
  validUntil   DateTime? // Optional expiration date
  isActive     Boolean                  @default(true)
  createdAt    DateTime                 @default(now())
  updatedAt    DateTime                 @updatedAt

  appointmentId Int @unique // One-to-one with appointment
  doctorId      Int
  patientId     Int
}

model PrescriptionMedication {
  id             Int          @id @default(autoincrement())
  prescription   Prescription @relation(fields: [prescriptionId], references: [id], onDelete: Cascade)
  medicationName String // Name of the medication
  dosage         String // e.g., "500mg", "10ml"
  frequency      String // e.g., "2 fois par jour", "1 comprim√© le matin"
  duration       String // e.g., "7 jours", "2 semaines"
  instructions   String? // Additional instructions for this medication
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  prescriptionId Int
}
